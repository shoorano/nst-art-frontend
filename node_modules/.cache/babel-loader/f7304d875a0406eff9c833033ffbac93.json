{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventListeners = void 0;\n\nconst Enums_1 = require(\"../Enums\");\n\nconst Constants_1 = require(\"./Constants\");\n\nclass EventListeners {\n  constructor(container) {\n    this.container = container;\n    this.canPush = true;\n\n    this.mouseMoveHandler = e => this.mouseTouchMove(e);\n\n    this.touchStartHandler = e => this.mouseTouchMove(e);\n\n    this.touchMoveHandler = e => this.mouseTouchMove(e);\n\n    this.touchEndHandler = () => this.mouseTouchFinish();\n\n    this.mouseLeaveHandler = () => this.mouseTouchFinish();\n\n    this.touchCancelHandler = () => this.mouseTouchFinish();\n\n    this.touchEndClickHandler = e => this.mouseTouchClick(e);\n\n    this.mouseUpHandler = e => this.mouseTouchClick(e);\n\n    this.visibilityChangeHandler = () => this.handleVisibilityChange();\n\n    this.resizeHandler = () => this.handleWindowResize();\n  }\n\n  static manageListener(element, event, handler, add, options) {\n    if (add) {\n      let addOptions = {\n        passive: true\n      };\n\n      if (typeof options === \"boolean\") {\n        addOptions.capture = options;\n      } else if (options !== undefined) {\n        addOptions = options;\n      }\n\n      element.addEventListener(event, handler, addOptions);\n    } else {\n      const removeOptions = options;\n      element.removeEventListener(event, handler, removeOptions);\n    }\n  }\n\n  addListeners() {\n    this.manageListeners(true);\n  }\n\n  removeListeners() {\n    this.manageListeners(false);\n  }\n\n  manageListeners(add) {\n    const container = this.container;\n    const options = container.options;\n    const detectType = options.interactivity.detectsOn;\n\n    if (detectType === Enums_1.InteractivityDetect.window) {\n      container.interactivity.element = window;\n    } else if (detectType === Enums_1.InteractivityDetect.parent && container.canvas.element) {\n      container.interactivity.element = container.canvas.element.parentNode;\n    } else {\n      container.interactivity.element = container.canvas.element;\n    }\n\n    const interactivityEl = container.interactivity.element;\n\n    if (interactivityEl && (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n      EventListeners.manageListener(interactivityEl, Constants_1.Constants.mouseMoveEvent, this.mouseMoveHandler, add);\n      EventListeners.manageListener(interactivityEl, Constants_1.Constants.touchStartEvent, this.touchStartHandler, add);\n      EventListeners.manageListener(interactivityEl, Constants_1.Constants.touchMoveEvent, this.touchMoveHandler, add);\n\n      if (!options.interactivity.events.onClick.enable) {\n        EventListeners.manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndHandler, add);\n      }\n\n      EventListeners.manageListener(interactivityEl, Constants_1.Constants.mouseLeaveEvent, this.mouseLeaveHandler, add);\n      EventListeners.manageListener(interactivityEl, Constants_1.Constants.touchCancelEvent, this.touchCancelHandler, add);\n    }\n\n    if (options.interactivity.events.onClick.enable && interactivityEl) {\n      EventListeners.manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndClickHandler, add);\n      EventListeners.manageListener(interactivityEl, Constants_1.Constants.mouseUpEvent, this.mouseUpHandler, add);\n    }\n\n    if (options.interactivity.events.resize) {\n      EventListeners.manageListener(window, Constants_1.Constants.resizeEvent, this.resizeHandler, add);\n    }\n\n    if (document) {\n      EventListeners.manageListener(document, Constants_1.Constants.visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n    }\n  }\n\n  handleWindowResize() {\n    const container = this.container;\n    const options = container.options;\n    const canvas = container.canvas.element;\n\n    if (!canvas) {\n      return;\n    }\n\n    const pxRatio = container.retina.pixelRatio;\n    container.canvas.size.width = canvas.offsetWidth * pxRatio;\n    container.canvas.size.height = canvas.offsetHeight * pxRatio;\n    canvas.width = container.canvas.size.width;\n    canvas.height = container.canvas.size.height;\n\n    if (!options.particles.move.enable) {\n      container.particles.redraw();\n    }\n\n    container.densityAutoParticles();\n\n    for (const [, plugin] of container.plugins) {\n      if (plugin.resize !== undefined) {\n        plugin.resize();\n      }\n    }\n  }\n\n  handleVisibilityChange() {\n    const container = this.container;\n    const options = container.options;\n\n    if (!options.pauseOnBlur) {\n      return;\n    }\n\n    if (document === null || document === void 0 ? void 0 : document.hidden) {\n      container.pageHidden = true;\n      container.pause();\n    } else {\n      container.pageHidden = false;\n\n      if (container.getAnimationStatus()) {\n        container.play(true);\n      } else {\n        container.draw();\n      }\n    }\n  }\n\n  mouseTouchMove(e) {\n    var _a, _b, _c;\n\n    const container = this.container;\n    const options = container.options;\n    let pos;\n    const canvas = container.canvas.element;\n\n    if (e.type.startsWith(\"mouse\")) {\n      this.canPush = true;\n      const mouseEvent = e;\n\n      if (((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element) === undefined) {\n        return;\n      }\n\n      if (container.interactivity.element === window) {\n        if (canvas) {\n          const clientRect = canvas.getBoundingClientRect();\n          pos = {\n            x: mouseEvent.clientX - clientRect.left,\n            y: mouseEvent.clientY - clientRect.top\n          };\n        }\n      } else if (options.interactivity.detectsOn === Enums_1.InteractivityDetect.parent) {\n        const source = mouseEvent.target;\n        const target = mouseEvent.currentTarget;\n\n        if (source && target) {\n          const sourceRect = source.getBoundingClientRect();\n          const targetRect = target.getBoundingClientRect();\n          pos = {\n            x: mouseEvent.offsetX + sourceRect.left - targetRect.left,\n            y: mouseEvent.offsetY + sourceRect.top - targetRect.top\n          };\n        } else {\n          pos = {\n            x: mouseEvent.offsetX || mouseEvent.clientX,\n            y: mouseEvent.offsetY || mouseEvent.clientY\n          };\n        }\n      } else {\n        if (mouseEvent.target === container.canvas.element) {\n          pos = {\n            x: mouseEvent.offsetX || mouseEvent.clientX,\n            y: mouseEvent.offsetY || mouseEvent.clientY\n          };\n        }\n      }\n    } else {\n      this.canPush = e.type !== \"touchmove\";\n      const touchEvent = e;\n      const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n      const canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n      pos = {\n        x: lastTouch.clientX - ((_b = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _b !== void 0 ? _b : 0),\n        y: lastTouch.clientY - ((_c = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _c !== void 0 ? _c : 0)\n      };\n    }\n\n    const pxRatio = container.retina.pixelRatio;\n\n    if (pos) {\n      pos.x *= pxRatio;\n      pos.y *= pxRatio;\n    }\n\n    container.interactivity.mouse.position = pos;\n    container.interactivity.status = Constants_1.Constants.mouseMoveEvent;\n  }\n\n  mouseTouchFinish() {\n    const container = this.container;\n    delete container.interactivity.mouse.position;\n    container.interactivity.status = Constants_1.Constants.mouseLeaveEvent;\n  }\n\n  mouseTouchClick(e) {\n    const container = this.container;\n    const options = container.options;\n    let handled = false;\n    const mousePosition = container.interactivity.mouse.position;\n\n    if (mousePosition === undefined || !options.interactivity.events.onClick.enable) {\n      return;\n    }\n\n    for (const [, plugin] of container.plugins) {\n      if (plugin.clickPositionValid !== undefined) {\n        handled = plugin.clickPositionValid(mousePosition);\n\n        if (handled) {\n          break;\n        }\n      }\n    }\n\n    if (!handled) {\n      this.doMouseTouchClick(e);\n    }\n  }\n\n  doMouseTouchClick(e) {\n    const container = this.container;\n    const options = container.options;\n\n    if (this.canPush) {\n      const mousePos = container.interactivity.mouse.position;\n\n      if (mousePos) {\n        container.interactivity.mouse.clickPosition = {\n          x: mousePos.x,\n          y: mousePos.y\n        };\n      } else {\n        return;\n      }\n\n      container.interactivity.mouse.clickTime = new Date().getTime();\n      const onClick = options.interactivity.events.onClick;\n\n      if (onClick.mode instanceof Array) {\n        for (const mode of onClick.mode) {\n          this.handleClickMode(mode);\n        }\n      } else {\n        this.handleClickMode(onClick.mode);\n      }\n    }\n\n    if (e.type === \"touchend\") {\n      setTimeout(() => this.mouseTouchFinish(), 500);\n    }\n  }\n\n  handleClickMode(mode) {\n    const container = this.container;\n    const options = container.options;\n    const pushNb = options.interactivity.modes.push.quantity;\n    const removeNb = options.interactivity.modes.remove.quantity;\n\n    switch (mode) {\n      case Enums_1.ClickMode.push:\n        {\n          if (pushNb > 0) {\n            if (options.particles.move.enable) {\n              container.particles.push(pushNb, container.interactivity.mouse);\n            } else {\n              if (pushNb === 1) {\n                container.particles.push(pushNb, container.interactivity.mouse);\n              } else if (pushNb > 1) {\n                container.particles.push(pushNb);\n              }\n            }\n          }\n\n          break;\n        }\n\n      case Enums_1.ClickMode.remove:\n        container.particles.removeQuantity(removeNb);\n        break;\n\n      case Enums_1.ClickMode.bubble:\n        container.bubble.clicking = true;\n        break;\n\n      case Enums_1.ClickMode.repulse:\n        container.repulse.clicking = true;\n        container.repulse.count = 0;\n\n        for (const particle of container.repulse.particles) {\n          particle.velocity.horizontal = particle.initialVelocity.horizontal;\n          particle.velocity.vertical = particle.initialVelocity.vertical;\n        }\n\n        container.repulse.particles = [];\n        container.repulse.finish = false;\n        setTimeout(() => {\n          if (!container.destroyed) {\n            container.repulse.clicking = false;\n          }\n        }, options.interactivity.modes.repulse.duration * 1000);\n        break;\n\n      case Enums_1.ClickMode.pause:\n        if (container.getAnimationStatus()) {\n          container.pause();\n        } else {\n          container.play();\n        }\n\n        break;\n    }\n\n    for (const [, plugin] of container.plugins) {\n      if (plugin.handleClickMode) {\n        plugin.handleClickMode(mode);\n      }\n    }\n  }\n\n}\n\nexports.EventListeners = EventListeners;","map":{"version":3,"sources":["/Users/danwilloughby/Desktop/ZTM/NST/nst-art-frontend/node_modules/tsparticles/dist/Utils/EventListeners.js"],"names":["Object","defineProperty","exports","value","EventListeners","Enums_1","require","Constants_1","constructor","container","canPush","mouseMoveHandler","e","mouseTouchMove","touchStartHandler","touchMoveHandler","touchEndHandler","mouseTouchFinish","mouseLeaveHandler","touchCancelHandler","touchEndClickHandler","mouseTouchClick","mouseUpHandler","visibilityChangeHandler","handleVisibilityChange","resizeHandler","handleWindowResize","manageListener","element","event","handler","add","options","addOptions","passive","capture","undefined","addEventListener","removeOptions","removeEventListener","addListeners","manageListeners","removeListeners","detectType","interactivity","detectsOn","InteractivityDetect","window","parent","canvas","parentNode","interactivityEl","events","onHover","enable","onClick","Constants","mouseMoveEvent","touchStartEvent","touchMoveEvent","touchEndEvent","mouseLeaveEvent","touchCancelEvent","mouseUpEvent","resize","resizeEvent","document","visibilityChangeEvent","pxRatio","retina","pixelRatio","size","width","offsetWidth","height","offsetHeight","particles","move","redraw","densityAutoParticles","plugin","plugins","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","draw","_a","_b","_c","pos","type","startsWith","mouseEvent","clientRect","getBoundingClientRect","x","clientX","left","y","clientY","top","source","target","currentTarget","sourceRect","targetRect","offsetX","offsetY","touchEvent","lastTouch","touches","length","canvasRect","mouse","position","status","handled","mousePosition","clickPositionValid","doMouseTouchClick","mousePos","clickPosition","clickTime","Date","getTime","mode","Array","handleClickMode","setTimeout","pushNb","modes","push","quantity","removeNb","remove","ClickMode","removeQuantity","bubble","clicking","repulse","count","particle","velocity","horizontal","initialVelocity","vertical","finish","destroyed","duration"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventListeners = void 0;\nconst Enums_1 = require(\"../Enums\");\nconst Constants_1 = require(\"./Constants\");\nclass EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.mouseMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchStartHandler = (e) => this.mouseTouchMove(e);\n        this.touchMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchEndHandler = () => this.mouseTouchFinish();\n        this.mouseLeaveHandler = () => this.mouseTouchFinish();\n        this.touchCancelHandler = () => this.mouseTouchFinish();\n        this.touchEndClickHandler = (e) => this.mouseTouchClick(e);\n        this.mouseUpHandler = (e) => this.mouseTouchClick(e);\n        this.visibilityChangeHandler = () => this.handleVisibilityChange();\n        this.resizeHandler = () => this.handleWindowResize();\n    }\n    static manageListener(element, event, handler, add, options) {\n        if (add) {\n            let addOptions = { passive: true };\n            if (typeof options === \"boolean\") {\n                addOptions.capture = options;\n            }\n            else if (options !== undefined) {\n                addOptions = options;\n            }\n            element.addEventListener(event, handler, addOptions);\n        }\n        else {\n            const removeOptions = options;\n            element.removeEventListener(event, handler, removeOptions);\n        }\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    manageListeners(add) {\n        const container = this.container;\n        const options = container.options;\n        const detectType = options.interactivity.detectsOn;\n        if (detectType === Enums_1.InteractivityDetect.window) {\n            container.interactivity.element = window;\n        }\n        else if (detectType === Enums_1.InteractivityDetect.parent && container.canvas.element) {\n            container.interactivity.element = container.canvas.element.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const interactivityEl = container.interactivity.element;\n        if (interactivityEl &&\n            (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n            EventListeners.manageListener(interactivityEl, Constants_1.Constants.mouseMoveEvent, this.mouseMoveHandler, add);\n            EventListeners.manageListener(interactivityEl, Constants_1.Constants.touchStartEvent, this.touchStartHandler, add);\n            EventListeners.manageListener(interactivityEl, Constants_1.Constants.touchMoveEvent, this.touchMoveHandler, add);\n            if (!options.interactivity.events.onClick.enable) {\n                EventListeners.manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndHandler, add);\n            }\n            EventListeners.manageListener(interactivityEl, Constants_1.Constants.mouseLeaveEvent, this.mouseLeaveHandler, add);\n            EventListeners.manageListener(interactivityEl, Constants_1.Constants.touchCancelEvent, this.touchCancelHandler, add);\n        }\n        if (options.interactivity.events.onClick.enable && interactivityEl) {\n            EventListeners.manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndClickHandler, add);\n            EventListeners.manageListener(interactivityEl, Constants_1.Constants.mouseUpEvent, this.mouseUpHandler, add);\n        }\n        if (options.interactivity.events.resize) {\n            EventListeners.manageListener(window, Constants_1.Constants.resizeEvent, this.resizeHandler, add);\n        }\n        if (document) {\n            EventListeners.manageListener(document, Constants_1.Constants.visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n        }\n    }\n    handleWindowResize() {\n        const container = this.container;\n        const options = container.options;\n        const canvas = container.canvas.element;\n        if (!canvas) {\n            return;\n        }\n        const pxRatio = container.retina.pixelRatio;\n        container.canvas.size.width = canvas.offsetWidth * pxRatio;\n        container.canvas.size.height = canvas.offsetHeight * pxRatio;\n        canvas.width = container.canvas.size.width;\n        canvas.height = container.canvas.size.height;\n        if (!options.particles.move.enable) {\n            container.particles.redraw();\n        }\n        container.densityAutoParticles();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n    }\n    handleVisibilityChange() {\n        const container = this.container;\n        const options = container.options;\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            if (container.getAnimationStatus()) {\n                container.play(true);\n            }\n            else {\n                container.draw();\n            }\n        }\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c;\n        const container = this.container;\n        const options = container.options;\n        let pos;\n        const canvas = container.canvas.element;\n        if (e.type.startsWith(\"mouse\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element) === undefined) {\n                return;\n            }\n            if (container.interactivity.element === window) {\n                if (canvas) {\n                    const clientRect = canvas.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.clientX - clientRect.left,\n                        y: mouseEvent.clientY - clientRect.top,\n                    };\n                }\n            }\n            else if (options.interactivity.detectsOn === Enums_1.InteractivityDetect.parent) {\n                const source = mouseEvent.target;\n                const target = mouseEvent.currentTarget;\n                if (source && target) {\n                    const sourceRect = source.getBoundingClientRect();\n                    const targetRect = target.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + sourceRect.left - targetRect.left,\n                        y: mouseEvent.offsetY + sourceRect.top - targetRect.top,\n                    };\n                }\n                else {\n                    pos = {\n                        x: mouseEvent.offsetX || mouseEvent.clientX,\n                        y: mouseEvent.offsetY || mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                if (mouseEvent.target === container.canvas.element) {\n                    pos = {\n                        x: mouseEvent.offsetX || mouseEvent.clientX,\n                        y: mouseEvent.offsetY || mouseEvent.clientY,\n                    };\n                }\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e;\n            const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n            const canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_b = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _b !== void 0 ? _b : 0),\n                y: lastTouch.clientY - ((_c = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _c !== void 0 ? _c : 0),\n            };\n        }\n        const pxRatio = container.retina.pixelRatio;\n        if (pos) {\n            pos.x *= pxRatio;\n            pos.y *= pxRatio;\n        }\n        container.interactivity.mouse.position = pos;\n        container.interactivity.status = Constants_1.Constants.mouseMoveEvent;\n    }\n    mouseTouchFinish() {\n        const container = this.container;\n        delete container.interactivity.mouse.position;\n        container.interactivity.status = Constants_1.Constants.mouseLeaveEvent;\n    }\n    mouseTouchClick(e) {\n        const container = this.container;\n        const options = container.options;\n        let handled = false;\n        const mousePosition = container.interactivity.mouse.position;\n        if (mousePosition === undefined || !options.interactivity.events.onClick.enable) {\n            return;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.clickPositionValid !== undefined) {\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n        }\n        if (!handled) {\n            this.doMouseTouchClick(e);\n        }\n    }\n    doMouseTouchClick(e) {\n        const container = this.container;\n        const options = container.options;\n        if (this.canPush) {\n            const mousePos = container.interactivity.mouse.position;\n            if (mousePos) {\n                container.interactivity.mouse.clickPosition = {\n                    x: mousePos.x,\n                    y: mousePos.y,\n                };\n            }\n            else {\n                return;\n            }\n            container.interactivity.mouse.clickTime = new Date().getTime();\n            const onClick = options.interactivity.events.onClick;\n            if (onClick.mode instanceof Array) {\n                for (const mode of onClick.mode) {\n                    this.handleClickMode(mode);\n                }\n            }\n            else {\n                this.handleClickMode(onClick.mode);\n            }\n        }\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const options = container.options;\n        const pushNb = options.interactivity.modes.push.quantity;\n        const removeNb = options.interactivity.modes.remove.quantity;\n        switch (mode) {\n            case Enums_1.ClickMode.push: {\n                if (pushNb > 0) {\n                    if (options.particles.move.enable) {\n                        container.particles.push(pushNb, container.interactivity.mouse);\n                    }\n                    else {\n                        if (pushNb === 1) {\n                            container.particles.push(pushNb, container.interactivity.mouse);\n                        }\n                        else if (pushNb > 1) {\n                            container.particles.push(pushNb);\n                        }\n                    }\n                }\n                break;\n            }\n            case Enums_1.ClickMode.remove:\n                container.particles.removeQuantity(removeNb);\n                break;\n            case Enums_1.ClickMode.bubble:\n                container.bubble.clicking = true;\n                break;\n            case Enums_1.ClickMode.repulse:\n                container.repulse.clicking = true;\n                container.repulse.count = 0;\n                for (const particle of container.repulse.particles) {\n                    particle.velocity.horizontal = particle.initialVelocity.horizontal;\n                    particle.velocity.vertical = particle.initialVelocity.vertical;\n                }\n                container.repulse.particles = [];\n                container.repulse.finish = false;\n                setTimeout(() => {\n                    if (!container.destroyed) {\n                        container.repulse.clicking = false;\n                    }\n                }, options.interactivity.modes.repulse.duration * 1000);\n                break;\n            case Enums_1.ClickMode.pause:\n                if (container.getAnimationStatus()) {\n                    container.pause();\n                }\n                else {\n                    container.play();\n                }\n                break;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.handleClickMode) {\n                plugin.handleClickMode(mode);\n            }\n        }\n    }\n}\nexports.EventListeners = EventListeners;\n"]},"metadata":{},"sourceType":"script"}