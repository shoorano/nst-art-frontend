{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Circle = void 0;\n\nconst Range_1 = require(\"./Range\");\n\nclass Circle extends Range_1.Range {\n  constructor(x, y, radius) {\n    super(x, y);\n    this.radius = radius;\n  }\n\n  contains(point) {\n    const d = Math.pow(point.x - this.position.x, 2) + Math.pow(point.y - this.position.y, 2);\n    return d <= this.radius * this.radius;\n  }\n\n  intersects(range) {\n    const rect = range;\n    const circle = range;\n    const pos1 = this.position;\n    const pos2 = range.position;\n    const xDist = Math.abs(pos2.x - pos1.x);\n    const yDist = Math.abs(pos2.y - pos1.y);\n    const r = this.radius;\n\n    if (circle.radius !== undefined) {\n      const r2 = circle.radius;\n      const rSum = r + r2;\n      const dist = Math.sqrt(xDist * xDist + yDist + yDist);\n      return rSum > dist;\n    } else if (rect.size !== undefined) {\n      const w = rect.size.width;\n      const h = rect.size.height;\n      const edges = Math.pow(xDist - w, 2) + Math.pow(yDist - h, 2);\n\n      if (xDist > r + w || yDist > r + h) {\n        return false;\n      }\n\n      if (xDist <= w || yDist <= h) {\n        return true;\n      }\n\n      return edges <= r * r;\n    }\n\n    return false;\n  }\n\n}\n\nexports.Circle = Circle;","map":{"version":3,"sources":["/Users/danwilloughby/Desktop/NST/nst-art-frontend/node_modules/tsparticles/dist/Utils/Circle.js"],"names":["Object","defineProperty","exports","value","Circle","Range_1","require","Range","constructor","x","y","radius","contains","point","d","Math","pow","position","intersects","range","rect","circle","pos1","pos2","xDist","abs","yDist","r","undefined","r2","rSum","dist","sqrt","size","w","width","h","height","edges"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,MAAR,GAAiB,KAAK,CAAtB;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMF,MAAN,SAAqBC,OAAO,CAACE,KAA7B,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,CAAD,EAAIC,CAAJ,EAAOC,MAAP,EAAe;AACtB,UAAMF,CAAN,EAASC,CAAT;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AACDC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACZ,UAAMC,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASH,KAAK,CAACJ,CAAN,GAAU,KAAKQ,QAAL,CAAcR,CAAjC,EAAoC,CAApC,IAAyCM,IAAI,CAACC,GAAL,CAASH,KAAK,CAACH,CAAN,GAAU,KAAKO,QAAL,CAAcP,CAAjC,EAAoC,CAApC,CAAnD;AACA,WAAOI,CAAC,IAAI,KAAKH,MAAL,GAAc,KAAKA,MAA/B;AACH;;AACDO,EAAAA,UAAU,CAACC,KAAD,EAAQ;AACd,UAAMC,IAAI,GAAGD,KAAb;AACA,UAAME,MAAM,GAAGF,KAAf;AACA,UAAMG,IAAI,GAAG,KAAKL,QAAlB;AACA,UAAMM,IAAI,GAAGJ,KAAK,CAACF,QAAnB;AACA,UAAMO,KAAK,GAAGT,IAAI,CAACU,GAAL,CAASF,IAAI,CAACd,CAAL,GAASa,IAAI,CAACb,CAAvB,CAAd;AACA,UAAMiB,KAAK,GAAGX,IAAI,CAACU,GAAL,CAASF,IAAI,CAACb,CAAL,GAASY,IAAI,CAACZ,CAAvB,CAAd;AACA,UAAMiB,CAAC,GAAG,KAAKhB,MAAf;;AACA,QAAIU,MAAM,CAACV,MAAP,KAAkBiB,SAAtB,EAAiC;AAC7B,YAAMC,EAAE,GAAGR,MAAM,CAACV,MAAlB;AACA,YAAMmB,IAAI,GAAGH,CAAC,GAAGE,EAAjB;AACA,YAAME,IAAI,GAAGhB,IAAI,CAACiB,IAAL,CAAUR,KAAK,GAAGA,KAAR,GAAgBE,KAAhB,GAAwBA,KAAlC,CAAb;AACA,aAAOI,IAAI,GAAGC,IAAd;AACH,KALD,MAMK,IAAIX,IAAI,CAACa,IAAL,KAAcL,SAAlB,EAA6B;AAC9B,YAAMM,CAAC,GAAGd,IAAI,CAACa,IAAL,CAAUE,KAApB;AACA,YAAMC,CAAC,GAAGhB,IAAI,CAACa,IAAL,CAAUI,MAApB;AACA,YAAMC,KAAK,GAAGvB,IAAI,CAACC,GAAL,CAASQ,KAAK,GAAGU,CAAjB,EAAoB,CAApB,IAAyBnB,IAAI,CAACC,GAAL,CAASU,KAAK,GAAGU,CAAjB,EAAoB,CAApB,CAAvC;;AACA,UAAIZ,KAAK,GAAGG,CAAC,GAAGO,CAAZ,IAAiBR,KAAK,GAAGC,CAAC,GAAGS,CAAjC,EAAoC;AAChC,eAAO,KAAP;AACH;;AACD,UAAIZ,KAAK,IAAIU,CAAT,IAAcR,KAAK,IAAIU,CAA3B,EAA8B;AAC1B,eAAO,IAAP;AACH;;AACD,aAAOE,KAAK,IAAIX,CAAC,GAAGA,CAApB;AACH;;AACD,WAAO,KAAP;AACH;;AApC8B;;AAsCnCzB,OAAO,CAACE,MAAR,GAAiBA,MAAjB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Circle = void 0;\nconst Range_1 = require(\"./Range\");\nclass Circle extends Range_1.Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        const d = Math.pow(point.x - this.position.x, 2) + Math.pow(point.y - this.position.y, 2);\n        return d <= this.radius * this.radius;\n    }\n    intersects(range) {\n        const rect = range;\n        const circle = range;\n        const pos1 = this.position;\n        const pos2 = range.position;\n        const xDist = Math.abs(pos2.x - pos1.x);\n        const yDist = Math.abs(pos2.y - pos1.y);\n        const r = this.radius;\n        if (circle.radius !== undefined) {\n            const r2 = circle.radius;\n            const rSum = r + r2;\n            const dist = Math.sqrt(xDist * xDist + yDist + yDist);\n            return rSum > dist;\n        }\n        else if (rect.size !== undefined) {\n            const w = rect.size.width;\n            const h = rect.size.height;\n            const edges = Math.pow(xDist - w, 2) + Math.pow(yDist - h, 2);\n            if (xDist > r + w || yDist > r + h) {\n                return false;\n            }\n            if (xDist <= w || yDist <= h) {\n                return true;\n            }\n            return edges <= r * r;\n        }\n        return false;\n    }\n}\nexports.Circle = Circle;\n"]},"metadata":{},"sourceType":"script"}